{"ast":null,"code":"const express = require('express');\nconst app = express();\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\n\n// Use body-parser middleware to parse JSON request bodies\napp.use(bodyParser.json());\napp.use(cors());\n\n// In-memory storage for the mudemaal records\nlet mudemaalRecords = [];\n\n// Define the mudemaal registration endpoint\napp.post('/api/mudemaal', (req, res) => {\n  const {\n    foldNo,\n    // Renamed from crimeNo\n    dateOfSeizure,\n    // Renamed from crimeDate\n    subjectNo,\n    // Renamed from mudemaalNo\n    subjectType,\n    // Renamed from mudemaalType, now a dropdown\n    mudemaalDetails,\n    officerName,\n    quantity,\n    // Renamed from orderNo\n    price,\n    // New field for price\n    presentStatus,\n    // New field for present status of issue\n    policeStation // New field for police station\n  } = req.body;\n\n  // Validate the received data (basic validation example)\n  if (!foldNo || !dateOfSeizure || !subjectNo || !subjectType || !quantity || !price || !presentStatus || !policeStation) {\n    return res.status(400).json({\n      message: 'All fields are required.'\n    });\n  }\n\n  // Create a new mudemaal record\n  const newMudemaal = {\n    id: mudemaalRecords.length + 1,\n    foldNo,\n    // Renamed field\n    dateOfSeizure,\n    // Renamed field\n    subjectNo,\n    // Renamed field\n    subjectType,\n    // Dropdown values\n    mudemaalDetails,\n    officerName,\n    quantity,\n    // Renamed field\n    price,\n    // New field for price\n    presentStatus,\n    // New field for present status of issue\n    policeStation // New field for police station\n  };\n\n  // Add the new record to the in-memory storage\n  mudemaalRecords.push(newMudemaal);\n\n  // Send a success response\n  res.status(201).json({\n    message: 'Mudemaal registration successful',\n    mudemaal: newMudemaal\n  });\n});\n\n// Define the endpoint to fetch all mudemaal records\napp.get('/api/mudemaal', (req, res) => {\n  res.status(200).json(mudemaalRecords);\n});\n\n// Define the endpoint to get a single mudemaal record by ID\napp.get('/api/mudemaal/:id', (req, res) => {\n  const {\n    id\n  } = req.params;\n  const mudemaal = mudemaalRecords.find(m => m.id === parseInt(id));\n  if (!mudemaal) {\n    return res.status(404).json({\n      message: 'Mudemaal record not found'\n    });\n  }\n  res.status(200).json(mudemaal);\n});\n\n// Define the endpoint to update a mudemaal record by ID\napp.put('/api/mudemaal/:id', (req, res) => {\n  const {\n    id\n  } = req.params;\n  const index = mudemaalRecords.findIndex(m => m.id === parseInt(id));\n  if (index === -1) {\n    return res.status(404).json({\n      message: 'Mudemaal record not found'\n    });\n  }\n  const {\n    foldNo,\n    dateOfSeizure,\n    subjectNo,\n    subjectType,\n    mudemaalDetails,\n    officerName,\n    quantity,\n    price,\n    presentStatus,\n    policeStation\n  } = req.body;\n\n  // Update the existing mudemaal record\n  mudemaalRecords[index] = {\n    id: parseInt(id),\n    foldNo,\n    dateOfSeizure,\n    subjectNo,\n    subjectType,\n    mudemaalDetails,\n    officerName,\n    quantity,\n    price,\n    presentStatus,\n    policeStation\n  };\n  res.status(200).json({\n    message: 'Mudemaal record updated successfully',\n    mudemaal: mudemaalRecords[index]\n  });\n});\n\n// Define the endpoint to delete a mudemaal record by ID\napp.delete('/api/mudemaal/:id', (req, res) => {\n  const {\n    id\n  } = req.params;\n  const index = mudemaalRecords.findIndex(m => m.id === parseInt(id));\n  if (index === -1) {\n    return res.status(404).json({\n      message: 'Mudemaal record not found'\n    });\n  }\n\n  // Remove the mudemaal record from the array\n  mudemaalRecords.splice(index, 1);\n  res.status(200).json({\n    message: 'Mudemaal record deleted successfully'\n  });\n});\n\n// Start the server on port 5000\nconst port = 5000;\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});","map":{"version":3,"names":["express","require","app","bodyParser","cors","use","json","mudemaalRecords","post","req","res","foldNo","dateOfSeizure","subjectNo","subjectType","mudemaalDetails","officerName","quantity","price","presentStatus","policeStation","body","status","message","newMudemaal","id","length","push","mudemaal","get","params","find","m","parseInt","put","index","findIndex","delete","splice","port","listen","console","log"],"sources":["C:/Users/Hp/OneDrive/Desktop/PoliceWebD/PoliceMuddemal/PoliceMuddamalWebSite/src/mockApi.js"],"sourcesContent":["const express = require('express');\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\n\r\n// Use body-parser middleware to parse JSON request bodies\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\n// In-memory storage for the mudemaal records\r\nlet mudemaalRecords = [];\r\n\r\n// Define the mudemaal registration endpoint\r\napp.post('/api/mudemaal', (req, res) => {\r\n    const {\r\n        foldNo,            // Renamed from crimeNo\r\n        dateOfSeizure,     // Renamed from crimeDate\r\n        subjectNo,         // Renamed from mudemaalNo\r\n        subjectType,       // Renamed from mudemaalType, now a dropdown\r\n        mudemaalDetails,\r\n        officerName,\r\n        quantity,          // Renamed from orderNo\r\n        price,             // New field for price\r\n        presentStatus,     // New field for present status of issue\r\n        policeStation      // New field for police station\r\n    } = req.body;\r\n\r\n    // Validate the received data (basic validation example)\r\n    if (!foldNo || !dateOfSeizure || !subjectNo || !subjectType || !quantity || !price || !presentStatus || !policeStation) {\r\n        return res.status(400).json({ message: 'All fields are required.' });\r\n    }\r\n\r\n    // Create a new mudemaal record\r\n    const newMudemaal = {\r\n        id: mudemaalRecords.length + 1,\r\n        foldNo,             // Renamed field\r\n        dateOfSeizure,      // Renamed field\r\n        subjectNo,          // Renamed field\r\n        subjectType,        // Dropdown values\r\n        mudemaalDetails,\r\n        officerName,\r\n        quantity,           // Renamed field\r\n        price,              // New field for price\r\n        presentStatus,      // New field for present status of issue\r\n        policeStation       // New field for police station\r\n    };\r\n\r\n    // Add the new record to the in-memory storage\r\n    mudemaalRecords.push(newMudemaal);\r\n\r\n    // Send a success response\r\n    res.status(201).json({\r\n        message: 'Mudemaal registration successful',\r\n        mudemaal: newMudemaal\r\n    });\r\n});\r\n\r\n// Define the endpoint to fetch all mudemaal records\r\napp.get('/api/mudemaal', (req, res) => {\r\n    res.status(200).json(mudemaalRecords);\r\n});\r\n\r\n// Define the endpoint to get a single mudemaal record by ID\r\napp.get('/api/mudemaal/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const mudemaal = mudemaalRecords.find(m => m.id === parseInt(id));\r\n\r\n    if (!mudemaal) {\r\n        return res.status(404).json({ message: 'Mudemaal record not found' });\r\n    }\r\n\r\n    res.status(200).json(mudemaal);\r\n});\r\n\r\n// Define the endpoint to update a mudemaal record by ID\r\napp.put('/api/mudemaal/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const index = mudemaalRecords.findIndex(m => m.id === parseInt(id));\r\n\r\n    if (index === -1) {\r\n        return res.status(404).json({ message: 'Mudemaal record not found' });\r\n    }\r\n\r\n    const {\r\n        foldNo,\r\n        dateOfSeizure,\r\n        subjectNo,\r\n        subjectType,\r\n        mudemaalDetails,\r\n        officerName,\r\n        quantity,\r\n        price,\r\n        presentStatus,\r\n        policeStation\r\n    } = req.body;\r\n\r\n    // Update the existing mudemaal record\r\n    mudemaalRecords[index] = {\r\n        id: parseInt(id),\r\n        foldNo,\r\n        dateOfSeizure,\r\n        subjectNo,\r\n        subjectType,\r\n        mudemaalDetails,\r\n        officerName,\r\n        quantity,\r\n        price,\r\n        presentStatus,\r\n        policeStation\r\n    };\r\n\r\n    res.status(200).json({\r\n        message: 'Mudemaal record updated successfully',\r\n        mudemaal: mudemaalRecords[index]\r\n    });\r\n});\r\n\r\n// Define the endpoint to delete a mudemaal record by ID\r\napp.delete('/api/mudemaal/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const index = mudemaalRecords.findIndex(m => m.id === parseInt(id));\r\n\r\n    if (index === -1) {\r\n        return res.status(404).json({ message: 'Mudemaal record not found' });\r\n    }\r\n\r\n    // Remove the mudemaal record from the array\r\n    mudemaalRecords.splice(index, 1);\r\n\r\n    res.status(200).json({ message: 'Mudemaal record deleted successfully' });\r\n});\r\n\r\n// Start the server on port 5000\r\nconst port = 5000;\r\napp.listen(port, () => {\r\n    console.log(`Server running on port ${port}`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}